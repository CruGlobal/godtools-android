buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://maven.google.com' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0-alpha3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.5.1'
        classpath 'com.newrelic.agent.android:agent-gradle-plugin:5.13.0'
        classpath 'io.fabric.tools:gradle:1.22.1'
        classpath 'org.ajoberstar:gradle-git:1.7.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'newrelic'

group 'org.cru.android'
version '4.3.4-SNAPSHOT'

apply plugin: 'org.ajoberstar.grgit'
ext.grgit = org.ajoberstar.grgit.Grgit.open()

// define dependency versions for this project
ext {
    buildTools = "26.0.0"
    compileSdk = 25
    minSdk     = 15
    targetSdk  = 25
}
ext.deps = [
        androidSupport       : '25.4.0',
        androidTestingSupport: '0.5',
        butterknife          : '8.6.0',
        crashlytics          : '2.6.8',
        eventbus             : '3.0.0',
        facebookStetho       : '1.5.0',
        gtoSupport           : '1.1.2-SNAPSHOT',
        guava                : '22.0-android',
        hamcrest             : '1.3',
        junit                : '4.12',
        leakcanary           : '1.5.1',
        lightweightStream    : '1.1.7',
        playServices         : '9.0.2',
        retrofit2            : '2.2.0'
]

dependencies {
    compile project(':godtools-base')
    implementation project(':godtools-model')
    compile project(':godtools-tract-renderer')

    compile "com.android.support:appcompat-v7:${deps.androidSupport}"
    compile "com.android.support:cardview-v7:${deps.androidSupport}"
    compile "com.android.support:customtabs:${deps.androidSupport}"
    compile "com.android.support:design:${deps.androidSupport}"

    compile 'com.google.android.gms:play-services-analytics:' + deps.playServices
    compile 'com.google.android.gms:play-services-gcm:' + deps.playServices

    compile 'org.ccci.gto.android:gto-support-api-okhttp3:' + deps.gtoSupport
    compile 'org.ccci.gto.android:gto-support-api-retrofit2:' + deps.gtoSupport
    compile "org.ccci.gto.android:gto-support-appcompat:${deps.gtoSupport}"
    compile 'org.ccci.gto.android:gto-support-db:' + deps.gtoSupport
    compile 'org.ccci.gto.android:gto-support-db-async:' + deps.gtoSupport
    compile "org.ccci.gto.android:gto-support-db-stream:${deps.gtoSupport}"
    compile "org.ccci.gto.android:gto-support-eventbus:${deps.gtoSupport}"
    compile 'org.ccci.gto.android:gto-support-gson:' + deps.gtoSupport
    implementation "org.ccci.gto.android:gto-support-jsonapi:${deps.gtoSupport}"
    compile 'org.ccci.gto.android:gto-support-jsonapi-retrofit2:' + deps.gtoSupport
    compile "org.ccci.gto.android:gto-support-picasso:${deps.gtoSupport}"
    compile "org.ccci.gto.android:gto-support-recyclerview:${deps.gtoSupport}"
    compile "org.ccci.gto.android:gto-support-sync:${deps.gtoSupport}"

    implementation "com.newrelic.agent.android:android-agent:5.13.0"
    implementation "com.crashlytics.sdk.android:crashlytics:${deps.crashlytics}"

    compile "com.google.guava:guava:${deps.guava}"
    compile "com.jakewharton:butterknife:${deps.butterknife}"
    compile "com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0"
    compile 'com.squareup.retrofit2:retrofit:' + deps.retrofit2
    compile 'com.squareup.retrofit2:converter-gson:' + deps.retrofit2
    compile('com.squareup.retrofit2:converter-simplexml:' + deps.retrofit2)
            {
                exclude module: 'stax'
                exclude module: 'stax-api'
                exclude module: 'xpp3'
            };

    androidTestCompile 'com.android.support.test:runner:' + deps.androidTestingSupport
    androidTestCompile 'com.android.support.test:rules:' + deps.androidTestingSupport
    androidTestCompile "com.android.support:support-annotations:${deps.androidSupport}"
    testImplementation "junit:junit:${deps.junit}"
    testImplementation "org.hamcrest:hamcrest-library:${deps.hamcrest}"

    debugCompile 'com.android.support:multidex:1.0.1'
    debugCompile 'org.ccci.gto.android:gto-support-leakcanary:' + deps.gtoSupport
    debugCompile "org.ccci.gto.android:gto-support-stetho:${deps.gtoSupport}"
    debugCompile 'com.facebook.stetho:stetho:' + deps.facebookStetho
    debugCompile 'com.facebook.stetho:stetho-okhttp3:' + deps.facebookStetho
    debugCompile 'com.facebook.stetho:stetho-urlconnection:' + deps.facebookStetho
    debugCompile "com.squareup.leakcanary:leakcanary-android:${deps.leakcanary}"

    compile project(path: ':godtools-renderer')

    annotationProcessor "com.jakewharton:butterknife-compiler:${deps.butterknife}"

    // fix conflicts in transitive dependencies
    androidTestCompile 'com.google.code.findbugs:jsr305:2.0.1'
}

android {
    buildToolsVersion buildTools
    compileSdkVersion compileSdk

    defaultConfig {
        applicationId 'org.keynote.godtools.android'
        versionName project.version
        versionCode grgit.log(includes:['HEAD']).size() + 4029047

        minSdkVersion minSdk
        targetSdkVersion targetSdk

        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
        proguardFiles 'proguard-rules.pro'

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "MOBILE_CONTENT_SYSTEM", "\"GodTools\""
        buildConfigField "String", "GOOGLE_ANALYTICS_CLIENT_ID", "\"UA-325725-50\""
        buildConfigField "String", "GROWTH_SPACES_URL", "\"https://www.growthspaces.org/api/v1/\""
        buildConfigField "String", "INTERPRETER_VERSION", "\"1\""
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        preDexLibraries !project.hasProperty('disablePreDex')
    }
    lintOptions {
        warning 'MissingTranslation'
    }
    packagingOptions {
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/LICENSE.txt'
    }
    signingConfigs {
        release {
            storeFile file(androidKeystorePath)
            storePassword androidKeystoreStorePassword
            keyAlias androidKeystoreKeyAlias
            keyPassword androidKeystoreKeyPassword
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            multiDexEnabled true

            buildConfigField "String", "BASE_URL_V2", "\"https://api.stage.godtoolsapp.com/godtools-api/rest/v2/\""
            buildConfigField "String", "BASE_URL", "\"https://api.stage.godtoolsapp.com/godtools-api/rest/\""
            buildConfigField "String", "MOBILE_CONTENT_API", "\"https://mobile-content-api-stage.cru.org/\""
            buildConfigField "String", "NEW_RELIC_API_KEY", "\"AA2f0cb2d41f6ac7dcc256eaa9ca7e0f640859fd52\""
        }
        release {
            shrinkResources true
            minifyEnabled true
            if (signingConfigs.release.storeFile.exists()) {
                signingConfig signingConfigs.release
            }

            buildConfigField "String", "BASE_URL_V2", "\"https://api.godtoolsapp.com/godtools-api/rest/v2/\""
            buildConfigField "String", "BASE_URL", "\"https://api.godtoolsapp.com/godtools-api/rest/\""
            buildConfigField "String", "MOBILE_CONTENT_API", "\"https://mobile-content-api.cru.org/\""
            buildConfigField "String", "NEW_RELIC_API_KEY", "\"AAcaf7bbfe3ffda5dcb1455d3bc16b0c5da1cd71e9\""
        }
    }
    applicationVariants.all {
        buildConfigField "String", "EVERY_STUDENT_AUTHORITY", '"' + applicationId + '.everystudent.EveryStudentProvider"'
        resValue "string", "every_student_authority", applicationId + ".everystudent.EveryStudentProvider"
    }
}

apply from: "maven_publish.gradle"
afterEvaluate { project ->
    artifacts {
        archives artifactSourcesJar
        archives artifactJavadocJar
    }
}


allprojects {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            name "maven.gcx.org"
            url "https://maven.gcx.org/"
            credentials {
                username gcxMavenRepositoryUsername
                password gcxMavenRepositoryPassword
            }
        }
        maven { url 'https://maven.google.com' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
    }
}
