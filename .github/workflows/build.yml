name: Build App

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]

jobs:
  cancel-previous:
    name: Cancel Stale In-progress Builds
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  static:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Static Analysis
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble check -x test --scan
      - name: Archive ktlint results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ktlint-results
          path: "**/build/reports/ktlint/"
      - name: Archive lint results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: lint-results
          path: "**/build/reports/lint-results*.*"

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run Unit Tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test jacocoTestReport --scan
      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          verbose: true
      - name: Archive Unit Test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-results
          path: "**/build/reports/tests/"

  qa_build:
    name: Deploy QA Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    needs: [static, tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Import Firebase API Key
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        run: echo $FIREBASE_API_KEY > firebase/firebase_api_key.json
      - name: Upload QA Build to Firebase
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :app:packageProductionQaUniversalApk appDistributionUploadProductionQa -PfirebaseAppDistributionBuild
        env:
          ORG_GRADLE_PROJECT_firebaseAppDistributionKeystoreStorePassword: ${{ secrets.BETA_KEYSTORE_PASSWORD }}
          ORG_GRADLE_PROJECT_firebaseAppDistributionKeystoreKeyPassword: ${{ secrets.BETA_KEYSTORE_PASSWORD }}          
