name: Build App

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]

jobs:
  cancel-previous:
    name: Cancel Stale In-progress Builds
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  static:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ github.ref }}-
            ${{ runner.os }}-gradle-refs/heads/${{ github.base_ref }}-
      - name: Run Static Analysis
        run: ./gradlew assemble check -x test --continue --stacktrace --parallel
      - name: Archive ktlint results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ktlint-results
          path: "**/build/reports/ktlint/"

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ github.ref }}-
            ${{ runner.os }}-gradle-refs/heads/${{ github.base_ref }}-
      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ github.ref }}-
            ${{ runner.os }}-maven-refs/heads/${{ github.base_ref }}-
      - name: Run Unit Tests
        run: ./gradlew test jacocoTestReport --continue --stacktrace --parallel
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          verbose: true
      - name: Archive Unit Test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-results
          path: "**/build/reports/tests/"

  qa_build:
    name: Deploy QA Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    needs: [static, tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ github.ref }}-
            ${{ runner.os }}-gradle-refs/heads/${{ github.base_ref }}-
      - name: Configure QA Keystore
        env:
          BETA_KEYSTORE_PASSWORD: ${{ secrets.BETA_KEYSTORE_PASSWORD }}
        run: |
          mkdir -p ~/.gradle
          echo firebaseAppDistributionKeystoreStorePassword=$BETA_KEYSTORE_PASSWORD >> ~/.gradle/gradle.properties
          echo firebaseAppDistributionKeystoreKeyPassword=$BETA_KEYSTORE_PASSWORD >> ~/.gradle/gradle.properties
      - name: Build App
        run: ./gradlew clean :app:packageProductionQaUniversalApk -PfirebaseAppDistributionBuild --continue --stacktrace --parallel
      - name: Decrypt Firebase API Key
        env:
          FIREBASE_API_KEY_KEY: ${{ secrets.FIREBASE_API_KEY_KEY }}
          FIREBASE_API_KEY_IV: ${{ secrets.FIREBASE_API_KEY_IV }}
        run: openssl aes-256-cbc -K $FIREBASE_API_KEY_KEY -iv $FIREBASE_API_KEY_IV -in firebase/firebase_api_key.json.enc -out firebase/firebase_api_key.json -d
      - name: Upload Build to Firebase
        run: ./gradlew appDistributionUploadProductionQa -PfirebaseAppDistributionBuild --parallel
